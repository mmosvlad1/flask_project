openapi: 3.0.3
info:
  title: Pharmacy Service API
  description: |
    This is an API for a pharmacy service. Pharmacists can manage medicines by adding, deleting, and updating information about them.
    Users can view information about medicines, make purchases, and request medicines that are currently not in stock.
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: Local development server

paths:
  /medicines:
    get:
      summary: Get all medicines
      operationId: getAllMedicines
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medicine'
    post:
      summary: Add a new medicine
      operationId: addMedicine
      requestBody:
        description: Medicine object to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicine'
      responses:
        '201':
          description: Medicine added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
        '400':
          description: Invalid input
  /medicines/{medicineId}:
    get:
      summary: Get details of a specific medicine
      operationId: getMedicineById
      parameters:
        - name: medicineId
          in: path
          description: ID of the medicine to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
        '404':
          description: Medicine not found
    put:
      summary: Update information of a specific medicine
      operationId: updateMedicine
      parameters:
        - name: medicineId
          in: path
          description: ID of the medicine to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated information for the medicine
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicine'
      responses:
        '200':
          description: Medicine updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
        '400':
          description: Invalid input
        '404':
          description: Medicine not found
    delete:
      summary: Delete a specific medicine
      operationId: deleteMedicine
      parameters:
        - name: medicineId
          in: path
          description: ID of the medicine to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Medicine deleted successfully
        '404':
          description: Medicine not found
  /demands:
    post:
      summary: Add demand for a specific medicine
      operationId: addDemand
      requestBody:
        description: Demand object to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemandRequest'
      responses:
        '201':
          description: Demand added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demand'
        '400':
          description: Invalid input or existing demand for the medicine
  /users/{userId}/purchases:
    get:
      summary: Get purchase history of a specific user
      operationId: getPurchaseHistory
      parameters:
        - name: userId
          in: path
          description: ID of the user to retrieve purchase history
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseHistory'
        '404':
          description: User not found or no purchase history available
  /purchase:
    post:
      summary: Make a purchase
      operationId: makePurchase
      requestBody:
        description: Purchase details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
      responses:
        '201':
          description: Purchase successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
        '400':
          description: Invalid input or insufficient stock
components:
  schemas:
    Medicine:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        quantityInStock:
          type: integer
          format: int32
      required:
        - name
        - price
        - quantityInStock
      description: Information about a medicine
    DemandRequest:
      type: object
      properties:
        medicineId:
          type: integer
          format: int64
      required:
        - medicineId
      description: Request for a specific medicine
    Demand:
      type: object
      properties:
        id:
          type: integer
          format: int64
        medicineId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
      description: Demand information
    PurchaseHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        medicineName:
          type: string
        quantity:
          type: integer
          format: int32
        totalAmount:
          type: number
          format: double
        purchaseDate:
          type: string
          format: date-time
      description: User's purchase history
    PurchaseRequest:
      type: object
      properties:
        medicineName:
          type: string
        quantity:
          type: integer
          format: int32
      description: Request for a medicine purchase
    PurchaseResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        totalAmount:
          type: number
          format: double
        purchaseDate:
          type: string
          format: date-time
      description: Response for a successful purchase
